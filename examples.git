0
git fetch origin (to see new updates)
1
git checkout -b temp (start work, can specify commit after name)
2
git push origin temp (to save work)
3
git rebase -i master (squash commits)
4
git merge master (in case of changes)
5
git checkout master
6
git merge temp
7
git push origin master
8
git branch -d temp
9
git push -d origin temp (delete remote)

git checkout -b test origin/test
##checkout remote branch

git stash
# saves and removes staged changes
git stash list
#shows stashes
git stash apply <optional stash id, eg stash@{2}>
git stash pop
#applies most recent stash and deletes it
git stash drop <optional stash id>

git tag â€“l
#Lists all the tags (versions)
git checkout tags/<tag_name>
#To switch to that version

git diff HEAD
#shows staged changes

git rm --cached <file>
#removes file from the index

git branch --list -a "*m*" --contains 85ce0f96b9cc3dd244ecd57ae99c6715d15e7009
#lists local and remote branches that start with m (includes the remote repo name) and contain this commit
#--no-contains is opposite
--merged gets branches that have been completely merged into this commit (or HEAD if none specified)

git diff remotes/origin/master master
#compares branches
git diff --stat origin/master  master
#shows files and # of lines changed

git cherry-pick <commitID>
#merges that commit into current branch

git checkout <commitID> -- file1/to/restore file2/to/restore
#restores specific files to commit

git diff branch_1..branch_2 <file>
#three dots for change in branch_2 from where it diverged from branch_1

git log -S "1.1.0-SNAPSHOT"
#finds when that was created/destroyed

basename -s .git `git config --get remote.origin.url`
#shows name of project

git config -l
#shows all configured variables
git config --global <variable> <value>
#sets the value
